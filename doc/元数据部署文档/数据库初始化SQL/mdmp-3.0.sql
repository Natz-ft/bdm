--==============================================================
-- DBMS name:      IBM DB2 Version 10 for z/OS
-- Created on:     2018/9/17 9:58:54
--==============================================================


--ALTER TABLE MDMP_ATTRIBUTE_ITEM_VALUE
--   DROP FOREIGN KEY F_PF_ATT;
--
--ALTER TABLE MDMP_ATTRIBUTE_VALUE
--   DROP FOREIGN KEY F_PF_MET;
--
--ALTER TABLE MDMP_CANDIDATE_VALUE
--   DROP FOREIGN KEY F_PF_ATT;
--
--ALTER TABLE MDMP_CLASS
--   DROP FOREIGN KEY F_PF_PKG;
--
--ALTER TABLE MDMP_CLS_ATTRIBUTE
--   DROP FOREIGN KEY F_PF_CLS;
--
--ALTER TABLE MDMP_CLS_RELATION
--   DROP FOREIGN KEY F_PF_CLS;
--
--ALTER TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE
--   DROP FOREIGN KEY F_PF_F_V;
--
--ALTER TABLE MDMP_HIS_ATTRIBUTE_VALUE
--   DROP FOREIGN KEY F_PF_MET;
--
--ALTER TABLE MDMP_HIS_METADATA
--   DROP FOREIGN KEY F_PF_ANC;
--
--ALTER TABLE MDMP_META_RELATION
--   DROP FOREIGN KEY F_PF_META_RELA_TAR;
--
--ALTER TABLE MDMP_META_RELATION
--   DROP FOREIGN KEY F_PF_META_RELA_SOU;
--
--ALTER TABLE MDMP_METADATA
--   DROP FOREIGN KEY F_PF_META_DRAFT;
--
--ALTER TABLE MDMP_METADATA
--   DROP FOREIGN KEY F_PF_META_HIS;
--
--ALTER TABLE MDMP_MULTIPLICITY
--   DROP FOREIGN KEY F_PF_ATTR_MULTI;
--
--ALTER TABLE MDMP_MULTIPLICITY
--   DROP FOREIGN KEY F_PF_RELA_MUTI_SOU;
--
--ALTER TABLE MDMP_MULTIPLICITY
--   DROP FOREIGN KEY F_PF_RELA_MUTI_TAR;
--  
--ALTER TABLE MDMP_MULTIPLICITY
--   DROP FOREIGN KEY F_PF_RELA_MUTI;
--  
--ALTER TABLE MDMP_PACKAGE
--   DROP FOREIGN KEY F_PF_PKG;
--
--ALTER TABLE MDMP_REF_SUPER_CLASS
--   DROP FOREIGN KEY F_PF_SUP;
--
--ALTER TABLE "MDMP_ADAPTER_PARAM"
--   DROP FOREIGN KEY F_PF_AD_PA;

--ALTER TABLE "MDMP_DATA_SOURCE"
--   DROP FOREIGN KEY F_PF_DA_AD;

--ALTER TABLE "MDMP_DATA_SOURCE_PARAM"
--   DROP FOREIGN KEY F_PF_DA_PA;

--DROP TABLE MDMP_ATTRIBUTE_DOMAIN;
--
--DROP TABLE MDMP_ATTRIBUTE_ITEM_VALUE;
--
--DROP TABLE MDMP_ATTRIBUTE_VALUE;
--
--DROP TABLE MDMP_CANDIDATE_VALUE;
--
--DROP TABLE MDMP_CLASS;
--
--DROP TABLE MDMP_CLS_ATTRIBUTE;
--
--DROP TABLE MDMP_CLS_RELATION;
--
--DROP TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE;
--
--DROP TABLE MDMP_HIS_ATTRIBUTE_VALUE;
--
--DROP TABLE MDMP_HIS_META_RELATION;
--
--DROP TABLE MDMP_HIS_METADATA;
--
--DROP TABLE MDMP_META_RELATION;
--
--DROP TABLE MDMP_METADATA;
--
--DROP TABLE MDMP_METADATA_VERSION;
--
--DROP TABLE MDMP_MULTIPLICITY;
--
--DROP TABLE MDMP_PACKAGE;
--
--DROP TABLE MDMP_REF_SUPER_CLASS;

--DROP TABLE MDMP_DIAGRAM;

--DROP TABLE "MDMP_ADAPTER";

--DROP INDEX PF_AD_PA_FK;

--DROP TABLE "MDMP_ADAPTER_PARAM";

--DROP INDEX PF_DA_AD_FK;

--DROP TABLE "MDMP_DATA_SOURCE";

--DROP INDEX PF_DA_PA_FK;

--DROP TABLE "MDMP_DATA_SOURCE_PARAM";

--ALTER TABLE DQC_HIS_SCORE_CARD_ITEM
--   DROP FOREIGN KEY F_PF_HIS_SC_ITEM;
--
--ALTER TABLE DQC_ISSUE_COMMENT
--   DROP FOREIGN KEY F_PF_ISSUE_C;
--
--ALTER TABLE DQC_PROJECT
--   DROP FOREIGN KEY F_PF_PROJ_HIS_SC;
--
--ALTER TABLE DQC_PROJECT_MEMBER
--   DROP FOREIGN KEY F_PF_PROJ_M;
--
--ALTER TABLE DQC_PROJECT_SCOPE
--   DROP FOREIGN KEY F_PF_PROJ_SCP;
--
--ALTER TABLE DQC_PROJECT_TASK
--   DROP FOREIGN KEY F_PF_PROJ_TSK;
--
--ALTER TABLE DQC_QUANTITY_ISSUE
--   DROP FOREIGN KEY F_PF_P_Q_ISSUE;
--
--ALTER TABLE DQC_RULE_PERFORM_RECORD
--   DROP FOREIGN KEY F_PF_T_INS_R;
--
--ALTER TABLE DQC_SCORE_CARD
--   DROP FOREIGN KEY F_PF_PROJ_SC;
--
--ALTER TABLE DQC_SCORE_CARD_ITEM
--   DROP FOREIGN KEY F_PF_SC_ITEM;
--
--ALTER TABLE DQC_TASK_INSTANCE
--   DROP FOREIGN KEY F_PF_PROJ_T_INS;
--
--DROP TABLE DQC_HIS_SCORE_CARD;
--
--DROP INDEX PF_HIS_SC_ITEM_FK;
--
--DROP TABLE DQC_HIS_SCORE_CARD_ITEM;
--
--DROP INDEX PF_ISSUE_C_FK;
--
--DROP TABLE DQC_ISSUE_COMMENT;
--
--DROP INDEX PF_PROJ_HIS_SC_FK;
--
--DROP TABLE DQC_PROJECT;
--
--DROP INDEX PF_PROJ_M_FK;
--
--DROP TABLE DQC_PROJECT_MEMBER;
--
--DROP INDEX PF_PROJ_SCP_FK;
--
--DROP TABLE DQC_PROJECT_SCOPE;
--
--DROP INDEX PF_PROJ_TSK_FK;
--
--DROP TABLE DQC_PROJECT_TASK;
--
--DROP INDEX PF_P_Q_ISSUE_FK;
--
--DROP TABLE DQC_QUANTITY_ISSUE;
--
--DROP INDEX PF_T_INS_R_FK;
--
--DROP TABLE DQC_RULE_PERFORM_RECORD;
--
--DROP INDEX PF_PROJ_SC_FK;
--
--DROP TABLE DQC_SCORE_CARD;
--
--DROP INDEX PF_SC_ITEM_FK;
--
--DROP TABLE DQC_SCORE_CARD_ITEM;
--
--DROP TABLE DQC_SUBSCRIPTION;
--
--DROP INDEX PF_PROJ_T_INS_FK;
--
--DROP TABLE DQC_TASK_INSTANCE;

--==============================================================
-- Table: MDMP_ATTRIBUTE_DOMAIN
--==============================================================
CREATE TABLE MDMP_ATTRIBUTE_DOMAIN (
   ATTRIBUTE_DOMAIN_ID  VARCHAR(32)            NOT NULL,
   NAME                 VARCHAR(64),
   CODE                 VARCHAR(32),
   DATA_TYPE            VARCHAR(32),
   LENGTH               INTEGER,
   PRECISION            INTEGER,
   CREATOR              VARCHAR(32),
   GMT_CREATE           DATE,
   MODIFIER             VARCHAR(32),
   GMT_MODIFY           DATE,
   ISSUER               VARCHAR(32),
   GMT_ISSUE            DATE,
   STATUS               VARCHAR(32),
   DOMAIN_VERSION       CHAR(10),
   ISSUE_VERSION        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_DOMAIN_ID)
);

COMMENT ON TABLE MDMP_ATTRIBUTE_DOMAIN IS
'属性域';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.ATTRIBUTE_DOMAIN_ID IS
'属性域ID';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.NAME IS
'名称';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.CODE IS
'编码';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.DATA_TYPE IS
'数据类型';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.LENGTH IS
'长度';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN."PRECISION" IS
'精度';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.CREATOR IS
'创建人';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.MODIFIER IS
'修改人';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.GMT_MODIFY IS
'修改时间';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.ISSUER IS
'发行人';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.GMT_ISSUE IS
'发行时间';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.DOMAIN_VERSION IS
'版本号';

COMMENT ON COLUMN MDMP_ATTRIBUTE_DOMAIN.ISSUE_VERSION IS
'发行版本号';

--==============================================================
-- Table: MDMP_ATTRIBUTE_ITEM_VALUE
--==============================================================
CREATE TABLE MDMP_ATTRIBUTE_ITEM_VALUE (
   ATTRIBUTE_ITEM_VALUE_ID VARCHAR(32)            NOT NULL,
   ATTRIBUTE_VALUE_ID   VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   ORD                  INTEGER,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_ITEM_VALUE_ID)
);

COMMENT ON TABLE MDMP_ATTRIBUTE_ITEM_VALUE IS
'属性值项';

COMMENT ON COLUMN MDMP_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_ITEM_VALUE_ID IS
'属性值项ID';

COMMENT ON COLUMN MDMP_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_VALUE_ID IS
'属性值ID';

COMMENT ON COLUMN MDMP_ATTRIBUTE_ITEM_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_ATTRIBUTE_ITEM_VALUE.ORD IS
'排序';

--==============================================================
-- Table: MDMP_ATTRIBUTE_VALUE
--==============================================================
CREATE TABLE MDMP_ATTRIBUTE_VALUE (
   ATTRIBUTE_VALUE_ID   VARCHAR(32)            NOT NULL,
   METADATA_ID          VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   VALUE_TYPE           VARCHAR(32),
   ATTRIBUTE_NAME       VARCHAR(64),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_VALUE_ID)
);

COMMENT ON TABLE MDMP_ATTRIBUTE_VALUE IS
'属性值';

COMMENT ON COLUMN MDMP_ATTRIBUTE_VALUE.ATTRIBUTE_VALUE_ID IS
'属性值ID';

COMMENT ON COLUMN MDMP_ATTRIBUTE_VALUE.METADATA_ID IS
'元数据ID';

COMMENT ON COLUMN MDMP_ATTRIBUTE_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_ATTRIBUTE_VALUE.VALUE_TYPE IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';


COMMENT ON COLUMN MDMP_ATTRIBUTE_VALUE.ATTRIBUTE_NAME IS
'属性名';

--==============================================================
-- Table: MDMP_CANDIDATE_VALUE
--==============================================================
CREATE TABLE MDMP_CANDIDATE_VALUE (
   CANDIDATE_VALUE_ID   VARCHAR(32)            NOT NULL,
   CLS_ATTRIBUTE_ID     VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   VALUE_TYPE           VARCHAR(32),
   DISPLAY_VALUE        VARCHAR(256),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (CANDIDATE_VALUE_ID)
);

COMMENT ON TABLE MDMP_CANDIDATE_VALUE IS
'候选值';

COMMENT ON COLUMN MDMP_CANDIDATE_VALUE.CANDIDATE_VALUE_ID IS
'候选值ID';

COMMENT ON COLUMN MDMP_CANDIDATE_VALUE.CLS_ATTRIBUTE_ID IS
'属性ID';

COMMENT ON COLUMN MDMP_CANDIDATE_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_CANDIDATE_VALUE.VALUE_TYPE IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';


COMMENT ON COLUMN MDMP_CANDIDATE_VALUE.DISPLAY_VALUE IS
'显示值';

--==============================================================
-- Table: MDMP_CLASS
--==============================================================
CREATE TABLE MDMP_CLASS (
   CLASS_ID             VARCHAR(32)            NOT NULL,
   PACKAGE_ID           VARCHAR(256),
   NAME                 VARCHAR(64),
   ALIAS                VARCHAR(256),
   ICON                 VARCHAR(2000),
   MEMO                 VARCHAR(4000),
   VISIBILITY           VARCHAR(32),
   CHANGEABILITY        DEC(1),
   DEPRECATED           DEC(1),
   ISSUE_VERSION        VARCHAR(32),
   IS_ABSTRACT          DEC(1),
   EDITABLE             DEC(1),
   FULLNAME             VARCHAR(256),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (CLASS_ID)
);

COMMENT ON TABLE MDMP_CLASS IS
'元模型';

COMMENT ON COLUMN MDMP_CLASS.CLASS_ID IS
'元模型ID';

COMMENT ON COLUMN MDMP_CLASS.PACKAGE_ID IS
'包ID';

COMMENT ON COLUMN MDMP_CLASS.NAME IS
'名称';

COMMENT ON COLUMN MDMP_CLASS.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_CLASS.ICON IS
'图标';

COMMENT ON COLUMN MDMP_CLASS.MEMO IS
'备注';

COMMENT ON COLUMN MDMP_CLASS.VISIBILITY IS
'可视性';

COMMENT ON COLUMN MDMP_CLASS.CHANGEABILITY IS
'可变性';

COMMENT ON COLUMN MDMP_CLASS.DEPRECATED IS
'已过时';

COMMENT ON COLUMN MDMP_CLASS.ISSUE_VERSION IS
'发行版本号';

COMMENT ON COLUMN MDMP_CLASS.IS_ABSTRACT IS
'是否抽象';

COMMENT ON COLUMN MDMP_CLASS.EDITABLE IS
'可编辑性';

COMMENT ON COLUMN MDMP_CLASS.FULLNAME IS
'全路径名';

--==============================================================
-- Table: MDMP_CLS_ATTRIBUTE
--==============================================================
CREATE TABLE MDMP_CLS_ATTRIBUTE (
   CLS_ATTRIBUTE_ID     VARCHAR(32)            NOT NULL,
   CLASS_ID             VARCHAR(32),
   ORD                  INTEGER,
   NAME                 VARCHAR(64),
   ALIAS                VARCHAR(256),
   VISIBILITY           VARCHAR(32),
   CHANGEABILITY        DEC(1),
   DEPRECATED           DEC(1),
   MANDATORY            DEC(1),
   ATTR_CLASS           VARCHAR(32),
   VALUE_TYPE           VARCHAR(32),
   INIT_VALUE           VARCHAR(32),
   EDITOR               VARCHAR(32),
   ORDERING             VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (CLS_ATTRIBUTE_ID)
);

COMMENT ON TABLE MDMP_CLS_ATTRIBUTE IS
'元模型属性';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.CLS_ATTRIBUTE_ID IS
'属性ID';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.CLASS_ID IS
'元模型ID';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.ORD IS
'排序';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.NAME IS
'名称';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.VISIBILITY IS
'可视性';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.CHANGEABILITY IS
'可变性';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.DEPRECATED IS
'已过时';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.MANDATORY IS
'强制';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.ATTR_CLASS IS
'如果值类型为对象值类型：需要包名+模型名';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.VALUE_TYPE IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';


COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.INIT_VALUE IS
'初始值';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.EDITOR IS
'1-文本输入框
2-数字输入框
3-下拉菜单
4-密码输入框';

COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.ORDERING IS
'排序类型';

--==============================================================
-- Table: MDMP_CLS_RELATION
--==============================================================
CREATE TABLE MDMP_CLS_RELATION (
   CLS_RELATION_ID      VARCHAR(32)            NOT NULL,
   CLASS_ID             VARCHAR(32),
   NAME                 VARCHAR(64),
   KIND                 VARCHAR(32),
   META_CLASS           VARCHAR(256),
   RELATION_TYPE        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (CLS_RELATION_ID)
);

COMMENT ON TABLE MDMP_CLS_RELATION IS
'关联关系';

COMMENT ON COLUMN MDMP_CLS_RELATION.CLS_RELATION_ID IS
'关联关系ID';

COMMENT ON COLUMN MDMP_CLS_RELATION.CLASS_ID IS
'元模型ID';

COMMENT ON COLUMN MDMP_CLS_RELATION.NAME IS
'名称';

COMMENT ON COLUMN MDMP_CLS_RELATION.KIND IS
'类型';

COMMENT ON COLUMN MDMP_CLS_RELATION.META_CLASS IS
'元模型';

COMMENT ON COLUMN MDMP_CLS_RELATION.RELATION_TYPE IS
'关联类型';

--==============================================================
-- Table: MDMP_HIS_ATTRIBUTE_ITEM_VALUE
--==============================================================
CREATE TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE (
   ATTRIBUTE_ITEM_VALUE_HIS_ID VARCHAR(32)            NOT NULL,
   ATTRIBUTE_HIS_VALUE_ID VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   ORD                  INTEGER,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_ITEM_VALUE_HIS_ID)
);

COMMENT ON TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE IS
'历史属性值项';

COMMENT ON COLUMN 
MDMP_HIS_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_ITEM_VALUE_HIS_ID IS
'历史属性值项ID';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_HIS_VALUE_ID 
IS
'历史属性值ID';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_ITEM_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_ITEM_VALUE.ORD IS
'排序';

--==============================================================
-- Table: MDMP_HIS_ATTRIBUTE_VALUE
--==============================================================
CREATE TABLE MDMP_HIS_ATTRIBUTE_VALUE (
   ATTRIBUTE_HIS_VALUE_ID VARCHAR(32)            NOT NULL,
   METADATA_HIS_ID      VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   VALUE_TYPE           VARCHAR(32),
   ATTRIBUTE_NAME       VARCHAR(64),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_HIS_VALUE_ID)
);

COMMENT ON TABLE MDMP_HIS_ATTRIBUTE_VALUE IS
'历史属性值';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_VALUE.ATTRIBUTE_HIS_VALUE_ID IS
'历史属性值ID';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_VALUE.METADATA_HIS_ID IS
'历史元数据ID';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_VALUE.VALUE_TYPE IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';


COMMENT ON COLUMN MDMP_HIS_ATTRIBUTE_VALUE.ATTRIBUTE_NAME IS
'属性名';

--==============================================================
-- Table: MDMP_HIS_META_RELATION
--==============================================================
CREATE TABLE MDMP_HIS_META_RELATION (
   META_RELATION_ID     VARCHAR(32)            NOT NULL,
   RELATION_TYPE        VARCHAR(32),
   SOURCE_RELA_TYPE     VARCHAR(32),
   SOURCE_METADATA_ID   VARCHAR(32),
   TARGET_RELA_TYPE     VARCHAR(32),
   TARGET_METADATA_ID   VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (META_RELATION_ID)
);

COMMENT ON TABLE MDMP_HIS_META_RELATION IS
'历史元数据关联关系';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.META_RELATION_ID IS
'元数据关联关系ID';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.RELATION_TYPE IS
'关联类型';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.SOURCE_RELA_TYPE IS
'源关联类型';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.SOURCE_METADATA_ID IS
'源元数据ID';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.TARGET_RELA_TYPE IS
'目标关联类型';

COMMENT ON COLUMN MDMP_HIS_META_RELATION.TARGET_METADATA_ID IS
'目标元数据ID';

--==============================================================
-- Table: MDMP_HIS_METADATA
--==============================================================
CREATE TABLE MDMP_HIS_METADATA (
   METADATA_HIS_ID      VARCHAR(32)            NOT NULL,
   PARENT_ID            VARCHAR(32),
   META_CLASS           VARCHAR(256),
   NAME                 VARCHAR(64),
   ALIAS                VARCHAR(256),
   CODE                 VARCHAR(32),
   META_VERSION         INTEGER,
   STATUS               VARCHAR(32),
   PHASE                VARCHAR(32),
   CREATOR              VARCHAR(32),
   GMT_CREATE           DATE,
   MODIFIER             VARCHAR(32),
   GMT_MODIFY           DATE,
   ISSUER               VARCHAR(32),
   GMT_ISSUE            DATE,
   DESTROYER            VARCHAR(32),
   GMT_DESTORY          DATE,
   ENABLED              DEC(1),
   LOCKED               DEC(1),
   ISSUE_VERSION        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (METADATA_HIS_ID)
);

COMMENT ON TABLE MDMP_HIS_METADATA IS
'历史元数据';

COMMENT ON COLUMN MDMP_HIS_METADATA.METADATA_HIS_ID IS
'历史元数据ID';

COMMENT ON COLUMN MDMP_HIS_METADATA.PARENT_ID IS
'父ID';

COMMENT ON COLUMN MDMP_HIS_METADATA.META_CLASS IS
'元模型';

COMMENT ON COLUMN MDMP_HIS_METADATA.NAME IS
'名称';

COMMENT ON COLUMN MDMP_HIS_METADATA.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_HIS_METADATA.CODE IS
'编码';

COMMENT ON COLUMN MDMP_HIS_METADATA.META_VERSION IS
'版本号';

COMMENT ON COLUMN MDMP_HIS_METADATA.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_HIS_METADATA.PHASE IS
'所在阶段';

COMMENT ON COLUMN MDMP_HIS_METADATA.CREATOR IS
'创建人';

COMMENT ON COLUMN MDMP_HIS_METADATA.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_HIS_METADATA.MODIFIER IS
'修改人';

COMMENT ON COLUMN MDMP_HIS_METADATA.GMT_MODIFY IS
'修改时间';

COMMENT ON COLUMN MDMP_HIS_METADATA.ISSUER IS
'发行人';

COMMENT ON COLUMN MDMP_HIS_METADATA.GMT_ISSUE IS
'发行时间';

COMMENT ON COLUMN MDMP_HIS_METADATA.DESTROYER IS
'销毁人';

COMMENT ON COLUMN MDMP_HIS_METADATA.GMT_DESTORY IS
'销毁时间';

COMMENT ON COLUMN MDMP_HIS_METADATA.ENABLED IS
'是否启用';

COMMENT ON COLUMN MDMP_HIS_METADATA.LOCKED IS
'是否锁定';

COMMENT ON COLUMN MDMP_HIS_METADATA.ISSUE_VERSION IS
'发行版本号';

--==============================================================
-- Table: MDMP_META_RELATION
--==============================================================
CREATE TABLE MDMP_META_RELATION (
   META_RELATION_ID     VARCHAR(32)            NOT NULL,
   SOURCE_METADATA_ID   VARCHAR(32),
   TARGET_METADATA_ID   VARCHAR(32),
   RELATION_TYPE        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (META_RELATION_ID)
);

COMMENT ON TABLE MDMP_META_RELATION IS
'元数据关联关系';

COMMENT ON COLUMN MDMP_META_RELATION.META_RELATION_ID IS
'元数据关联关系ID';

COMMENT ON COLUMN MDMP_META_RELATION.SOURCE_METADATA_ID IS
'源元数据ID';

COMMENT ON COLUMN MDMP_META_RELATION.TARGET_METADATA_ID IS
'目标元数据ID';

COMMENT ON COLUMN MDMP_META_RELATION.RELATION_TYPE IS
'关联类型';

--==============================================================
-- Table: MDMP_METADATA
--==============================================================
CREATE TABLE MDMP_METADATA (
   METADATA_ID          VARCHAR(32)            NOT NULL,
   PARENT_ID            VARCHAR(32),
   METADATA_HIS_ID      VARCHAR(32),
   META_CLASS           VARCHAR(256),
   NAME                 VARCHAR(64),
   ALIAS                VARCHAR(256),
   CODE                 VARCHAR(32),
   META_VERSION         INTEGER,
   STATUS               VARCHAR(32),
   PHASE                VARCHAR(32),
   CREATOR              VARCHAR(32),
   GMT_CREATE           DATE,
   MODIFIER             VARCHAR(32),
   GMT_MODIFY           DATE,
   ISSUER               VARCHAR(32),
   GMT_ISSUE            DATE,
   DESTROYER            VARCHAR(32),
   GMT_DESTORY          DATE,
   ENABLED              DEC(1),
   LOCKED               DEC(1),
   ISSUE_VERSION        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (METADATA_ID)
);

COMMENT ON TABLE MDMP_METADATA IS
'元数据';

COMMENT ON COLUMN MDMP_METADATA.METADATA_ID IS
'元数据ID';

COMMENT ON COLUMN MDMP_METADATA.PARENT_ID IS
'父ID';

COMMENT ON COLUMN MDMP_METADATA.METADATA_HIS_ID IS
'历史元数据ID';

COMMENT ON COLUMN MDMP_METADATA.META_CLASS IS
'元模型';

COMMENT ON COLUMN MDMP_METADATA.NAME IS
'名称';

COMMENT ON COLUMN MDMP_METADATA.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_METADATA.CODE IS
'编码';

COMMENT ON COLUMN MDMP_METADATA.META_VERSION IS
'版本号';

COMMENT ON COLUMN MDMP_METADATA.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_METADATA.PHASE IS
'所在阶段';

COMMENT ON COLUMN MDMP_METADATA.CREATOR IS
'创建人';

COMMENT ON COLUMN MDMP_METADATA.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_METADATA.MODIFIER IS
'修改人';

COMMENT ON COLUMN MDMP_METADATA.GMT_MODIFY IS
'修改时间';

COMMENT ON COLUMN MDMP_METADATA.ISSUER IS
'发行人';

COMMENT ON COLUMN MDMP_METADATA.GMT_ISSUE IS
'发行时间';

COMMENT ON COLUMN MDMP_METADATA.DESTROYER IS
'销毁人';

COMMENT ON COLUMN MDMP_METADATA.GMT_DESTORY IS
'销毁时间';

COMMENT ON COLUMN MDMP_METADATA.ENABLED IS
'是否启用';

COMMENT ON COLUMN MDMP_METADATA.LOCKED IS
'是否锁定';

COMMENT ON COLUMN MDMP_METADATA.ISSUE_VERSION IS
'发行版本号';

--==============================================================
-- Table: MDMP_METADATA_VERSION
--==============================================================
CREATE TABLE MDMP_METADATA_VERSION (
   METADATA_VERSION_ID  VARCHAR(32)            NOT NULL,
   ISSUE_VERSION        VARCHAR(32),
   GMT_ISSUE            DATE,
   ISSUER               VARCHAR(32),
   CREATOR              VARCHAR(32),
   GMT_CREATE           DATE,
   STATUS               VARCHAR(32),
   GMT_END              DATE,
   MEMO                 VARCHAR(4000),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (METADATA_VERSION_ID)
);

COMMENT ON TABLE MDMP_METADATA_VERSION IS
'元数据发行版本';

COMMENT ON COLUMN MDMP_METADATA_VERSION.METADATA_VERSION_ID IS
'元数据发行版本ID';

COMMENT ON COLUMN MDMP_METADATA_VERSION.ISSUE_VERSION IS
'发行版本号';

COMMENT ON COLUMN MDMP_METADATA_VERSION.GMT_ISSUE IS
'发行时间';

COMMENT ON COLUMN MDMP_METADATA_VERSION.ISSUER IS
'发行人';

COMMENT ON COLUMN MDMP_METADATA_VERSION.CREATOR IS
'创建人';

COMMENT ON COLUMN MDMP_METADATA_VERSION.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_METADATA_VERSION.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_METADATA_VERSION.GMT_END IS
'终止时间';

COMMENT ON COLUMN MDMP_METADATA_VERSION.MEMO IS
'备注';

--==============================================================
-- Table: MDMP_MULTIPLICITY
--==============================================================
CREATE TABLE MDMP_MULTIPLICITY (
   MULTIPLICITY_ID      VARCHAR(32)            NOT NULL,
   SOURCE_CLS_RELATION_ID VARCHAR(32),
   TARGET_CLS_RELATION_ID VARCHAR(32),
   CLS_ATTRIBUTE_ID     VARCHAR(32),
   LOWER                CHAR(1),
   UPPER                CHAR(1),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (MULTIPLICITY_ID)
);

COMMENT ON TABLE MDMP_MULTIPLICITY IS
'多重性';

COMMENT ON COLUMN MDMP_MULTIPLICITY.MULTIPLICITY_ID IS
'多样性ID';

COMMENT ON COLUMN MDMP_MULTIPLICITY.SOURCE_CLS_RELATION_ID IS
'源关联关系ID';

COMMENT ON COLUMN MDMP_MULTIPLICITY.TARGET_CLS_RELATION_ID IS
'目标关联关系ID';

COMMENT ON COLUMN MDMP_MULTIPLICITY.CLS_ATTRIBUTE_ID IS
'属性ID';

COMMENT ON COLUMN MDMP_MULTIPLICITY.LOWER IS
'最小值';

COMMENT ON COLUMN MDMP_MULTIPLICITY.UPPER IS
'最大值';

--==============================================================
-- Table: MDMP_PACKAGE
--==============================================================
CREATE TABLE MDMP_PACKAGE (
   PACKAGE_ID           VARCHAR(256)           NOT NULL,
   PARENT_PACKAGE_ID    VARCHAR(256),
   NAME                 VARCHAR(64),
   ALIAS                VARCHAR(256),
   ISSUE_VERSION        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (PACKAGE_ID)
);

COMMENT ON TABLE MDMP_PACKAGE IS
'元模型包';

COMMENT ON COLUMN MDMP_PACKAGE.PACKAGE_ID IS
'包ID';

COMMENT ON COLUMN MDMP_PACKAGE.PARENT_PACKAGE_ID IS
'父ID';

COMMENT ON COLUMN MDMP_PACKAGE.NAME IS
'名称';

COMMENT ON COLUMN MDMP_PACKAGE.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_PACKAGE.ISSUE_VERSION IS
'发行版本号';

--==============================================================
-- Table: MDMP_REF_SUPER_CLASS
--==============================================================
CREATE TABLE MDMP_REF_SUPER_CLASS (
   SUPER_CLASS_ID       VARCHAR(32)            NOT NULL,
   CLASS_ID             VARCHAR(32),
   SUPER_CLASS          VARCHAR(256),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (SUPER_CLASS_ID)
);

COMMENT ON TABLE MDMP_REF_SUPER_CLASS IS
'父元模型';

COMMENT ON COLUMN MDMP_REF_SUPER_CLASS.SUPER_CLASS_ID IS
'父元模型ID';

COMMENT ON COLUMN MDMP_REF_SUPER_CLASS.CLASS_ID IS
'元模型ID';

COMMENT ON COLUMN MDMP_REF_SUPER_CLASS.SUPER_CLASS IS
'父类';

ALTER TABLE MDMP_ATTRIBUTE_ITEM_VALUE
   ADD CONSTRAINT F_PF_ATT FOREIGN KEY (ATTRIBUTE_VALUE_ID)
      REFERENCES MDMP_ATTRIBUTE_VALUE (ATTRIBUTE_VALUE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_ATTRIBUTE_VALUE
   ADD CONSTRAINT F_PF_MET FOREIGN KEY (METADATA_ID)
      REFERENCES MDMP_METADATA (METADATA_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_CANDIDATE_VALUE
   ADD CONSTRAINT F_PF_ATT FOREIGN KEY (CLS_ATTRIBUTE_ID)
      REFERENCES MDMP_CLS_ATTRIBUTE (CLS_ATTRIBUTE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_CLASS
   ADD CONSTRAINT F_PF_PKG FOREIGN KEY (PACKAGE_ID)
      REFERENCES MDMP_PACKAGE (PACKAGE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_CLS_ATTRIBUTE
   ADD CONSTRAINT F_PF_CLS FOREIGN KEY (CLASS_ID)
      REFERENCES MDMP_CLASS (CLASS_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_CLS_RELATION
   ADD CONSTRAINT F_PF_CLS FOREIGN KEY (CLASS_ID)
      REFERENCES MDMP_CLASS (CLASS_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE
   ADD CONSTRAINT F_PF_F_V FOREIGN KEY (ATTRIBUTE_HIS_VALUE_ID)
      REFERENCES MDMP_HIS_ATTRIBUTE_VALUE (ATTRIBUTE_HIS_VALUE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_HIS_ATTRIBUTE_VALUE
   ADD CONSTRAINT F_PF_MET FOREIGN KEY (METADATA_HIS_ID)
      REFERENCES MDMP_HIS_METADATA (METADATA_HIS_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_HIS_METADATA
   ADD CONSTRAINT F_PF_ANC FOREIGN KEY (PARENT_ID)
      REFERENCES MDMP_HIS_METADATA (METADATA_HIS_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_META_RELATION
   ADD CONSTRAINT F_PF_META_RELA_TAR FOREIGN KEY (TARGET_METADATA_ID)
      REFERENCES MDMP_METADATA (METADATA_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_META_RELATION
   ADD CONSTRAINT F_PF_META_RELA_SOU FOREIGN KEY (SOURCE_METADATA_ID)
      REFERENCES MDMP_METADATA (METADATA_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_METADATA
   ADD CONSTRAINT F_PF_META_HIS FOREIGN KEY (METADATA_HIS_ID)
   	  REFERENCES MDMP_HIS_METADATA (METADATA_HIS_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_METADATA
   ADD CONSTRAINT F_PF_META_DRAFT FOREIGN KEY (PARENT_ID)
      REFERENCES MDMP_METADATA (METADATA_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_MULTIPLICITY
   ADD CONSTRAINT F_PF_ATTR_MULTI FOREIGN KEY (CLS_ATTRIBUTE_ID)
      REFERENCES MDMP_CLS_ATTRIBUTE (CLS_ATTRIBUTE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_MULTIPLICITY
   ADD CONSTRAINT F_PF_RELA_MUTI_SOU FOREIGN KEY (SOURCE_CLS_RELATION_ID)
      REFERENCES MDMP_CLS_RELATION (CLS_RELATION_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_MULTIPLICITY
   ADD CONSTRAINT F_PF_RELA_MUTI_TAR FOREIGN KEY (TARGET_CLS_RELATION_ID)
      REFERENCES MDMP_CLS_RELATION (CLS_RELATION_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_PACKAGE
   ADD CONSTRAINT F_PF_PKG FOREIGN KEY (PARENT_PACKAGE_ID)
      REFERENCES MDMP_PACKAGE (PACKAGE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_REF_SUPER_CLASS
   ADD CONSTRAINT F_PF_SUP FOREIGN KEY (CLASS_ID)
      REFERENCES MDMP_CLASS (CLASS_ID)
      ON DELETE RESTRICT;
     
--==============================================================
-- MDMP_METADATA增加变更Id字段
--==============================================================
ALTER TABLE MDMP_METADATA
   ADD CHANGE_ID VARCHAR(32);

COMMENT ON COLUMN MDMP_METADATA.CHANGE_ID IS
'变更ID';

--==============================================================
-- MDMP_CLS_ATTRIBUTE元模型属性表字段长度改变
--==============================================================
ALTER TABLE MDMP_CLS_ATTRIBUTE ALTER COLUMN ATTR_CLASS
 SET DATA TYPE VARCHAR(256) ;
COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.ATTR_CLASS IS '如果值类型为对象值类型：需要包名+模型名' ;
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_CLS_ATTRIBUTE') ;

--==============================================================
-- MDMP_MULTIPLICITY修改字段
--==============================================================
ALTER TABLE Mdmp_Multiplicity
   ADD CLS_RELATION_ID VARCHAR(32);

COMMENT ON COLUMN Mdmp_Multiplicity.CLS_RELATION_ID IS
'关联关系ID';

--删除原来的外键约束
ALTER TABLE MDMP_MULTIPLICITY
   DROP FOREIGN KEY F_PF_RELA_MUTI_SOU;

ALTER TABLE MDMP_MULTIPLICITY
   DROP FOREIGN KEY F_PF_RELA_MUTI_TAR;
--删除字段  
ALTER TABLE MDMP_MULTIPLICITY DROP COLUMN SOURCE_CLS_RELATION_ID;
ALTER TABLE MDMP_MULTIPLICITY DROP COLUMN TARGET_CLS_RELATION_ID;
--新增外键约束
ALTER TABLE MDMP_MULTIPLICITY
   ADD CONSTRAINT F_PF_RELA_MUTI FOREIGN KEY (CLS_RELATION_ID)
      REFERENCES MDMP_CLS_RELATION (CLS_RELATION_ID)
      ON DELETE RESTRICT;
--重组
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_MULTIPLICITY');

--==============================================================
-- MDMP_METADATA增加字段
--==============================================================
ALTER TABLE MDMP_METADATA
   ADD OPERATION_TYPE VARCHAR(32);

COMMENT ON COLUMN MDMP_METADATA.OPERATION_TYPE IS
'变更类型';

--==============================================================
-- MDMP_CLS_RELATION增加字段
--==============================================================
ALTER TABLE MDMP_CLS_RELATION
   ADD OPERATION_ID VARCHAR(32);

COMMENT ON COLUMN MDMP_CLS_RELATION.OPERATION_ID IS
'操作ID';

--==============================================================
-- MDMP_METADATA增加字段
--==============================================================
ALTER TABLE MDMP_METADATA
   ADD CNNAME VARCHAR(64);

COMMENT ON COLUMN MDMP_METADATA.CNNAME IS
'中文名';

COMMENT ON COLUMN MDMP_METADATA.NAME IS
'英文名';

--==============================================================
-- MDMP_METADATA把NAME的值复制到CNNAME
--==============================================================
UPDATE MDMP_METADATA SET CNNAME = NAME;

--==============================================================
-- MDMP_HIS_METADATA增加字段
--==============================================================
ALTER TABLE MDMP_HIS_METADATA
   ADD CNNAME VARCHAR(64);

COMMENT ON COLUMN MDMP_HIS_METADATA.CNNAME IS
'中文名';

COMMENT ON COLUMN MDMP_HIS_METADATA.NAME IS
'英文名';

--==============================================================
-- MDMP_METADATA更改字段类型
--==============================================================
ALTER TABLE MDMP_METADATA ALTER COLUMN GMT_CREATE SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_METADATA ALTER COLUMN GMT_MODIFY SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_METADATA ALTER COLUMN GMT_ISSUE SET DATA TYPE TIMESTAMP;
--重组
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_METADATA');
ALTER TABLE MDMP_METADATA ALTER COLUMN GMT_DESTORY SET DATA TYPE TIMESTAMP;

--==============================================================
-- MDMP_HIS_METADATA更改字段类型
--==============================================================
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN GMT_CREATE SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN GMT_MODIFY SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN GMT_ISSUE SET DATA TYPE TIMESTAMP;
--重组
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_HIS_METADATA');
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN GMT_DESTORY SET DATA TYPE TIMESTAMP;

--==============================================================
-- MDMP_ATTRIBUTE_DOMAIN更改字段类型
--==============================================================
ALTER TABLE MDMP_ATTRIBUTE_DOMAIN ALTER COLUMN GMT_CREATE SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_ATTRIBUTE_DOMAIN ALTER COLUMN GMT_MODIFY SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_ATTRIBUTE_DOMAIN ALTER COLUMN GMT_ISSUE SET DATA TYPE TIMESTAMP;

--==============================================================
-- MDMP_METADATA_VERSION更改字段类型
--==============================================================
ALTER TABLE MDMP_METADATA_VERSION ALTER COLUMN GMT_ISSUE SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_METADATA_VERSION ALTER COLUMN GMT_CREATE SET DATA TYPE TIMESTAMP;
ALTER TABLE MDMP_METADATA_VERSION ALTER COLUMN GMT_END SET DATA TYPE TIMESTAMP;




--==============================================================
-- 建视角管理相关表
-- Created on:     2018/9/27 20:47:27
--==============================================================

--ALTER TABLE MDMP_USER_DEFAULT_VIEW
--   DROP FOREIGN KEY F_PF_VIE;
--
--ALTER TABLE MDMP_VIEW_AUTH
--   DROP FOREIGN KEY F_PF_VIE;
--
--ALTER TABLE MDMP_VIEW_SCOPE
--   DROP FOREIGN KEY F_PF_VIE;
--
--DROP TABLE MDMP_UI_VIEW;
--
--DROP TABLE MDMP_USER_DEFAULT_VIEW;
--
--DROP TABLE MDMP_VIEW_AUTH;
--
--DROP TABLE MDMP_VIEW_SCOPE;

--==============================================================
-- Table: MDMP_UI_VIEW
--==============================================================
CREATE TABLE MDMP_UI_VIEW (
   VIEW_ID              VARCHAR(32)            NOT NULL,
   VIEW_NAME            VARCHAR(64),
   OWNER                VARCHAR(32),
   IS_SYSTEM            DEC(1),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (VIEW_ID)
);

COMMENT ON TABLE MDMP_UI_VIEW IS
'视角';

COMMENT ON COLUMN MDMP_UI_VIEW.VIEW_ID IS
'视角ID';

COMMENT ON COLUMN MDMP_UI_VIEW.VIEW_NAME IS
'视角名称';

COMMENT ON COLUMN MDMP_UI_VIEW.OWNER IS
'拥有者';

COMMENT ON COLUMN MDMP_UI_VIEW.IS_SYSTEM IS
'是否系统';

--==============================================================
-- Table: MDMP_USER_DEFAULT_VIEW
--==============================================================
CREATE TABLE MDMP_USER_DEFAULT_VIEW (
   DEFAULT_VIEW_ID      VARCHAR(32)            NOT NULL,
   VIEW_ID              VARCHAR(32),
   USER_CODE            VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (DEFAULT_VIEW_ID)
);

COMMENT ON TABLE MDMP_USER_DEFAULT_VIEW IS
'用户默认视角';

COMMENT ON COLUMN MDMP_USER_DEFAULT_VIEW.DEFAULT_VIEW_ID IS
'默认视角ID';

COMMENT ON COLUMN MDMP_USER_DEFAULT_VIEW.VIEW_ID IS
'视角ID';

COMMENT ON COLUMN MDMP_USER_DEFAULT_VIEW.USER_CODE IS
'用户编号';

--==============================================================
-- Table: MDMP_VIEW_AUTH
--==============================================================
CREATE TABLE MDMP_VIEW_AUTH (
   VIEW_AUTH_ID         VARCHAR(32)            NOT NULL,
   VIEW_ID              VARCHAR(32),
   ROLE_CODE            VARCHAR(32),
   IS_DEFAULT           DEC(1),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (VIEW_AUTH_ID)
);

COMMENT ON TABLE MDMP_VIEW_AUTH IS
'视角权限';

COMMENT ON COLUMN MDMP_VIEW_AUTH.VIEW_AUTH_ID IS
'视角权限Id';

COMMENT ON COLUMN MDMP_VIEW_AUTH.VIEW_ID IS
'视角ID';

COMMENT ON COLUMN MDMP_VIEW_AUTH.ROLE_CODE IS
'角色编号';

COMMENT ON COLUMN MDMP_VIEW_AUTH.IS_DEFAULT IS
'是否默认';

--==============================================================
-- Table: MDMP_VIEW_SCOPE
--==============================================================
CREATE TABLE MDMP_VIEW_SCOPE (
   VIEW_SCOPE_ID        VARCHAR(32)            NOT NULL,
   VIEW_ID              VARCHAR(32),
   META_FULLNAME        VARCHAR(256),
   META_CLASS           VARCHAR(64),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (VIEW_SCOPE_ID)
);

COMMENT ON TABLE MDMP_VIEW_SCOPE IS
'视角范围';

COMMENT ON COLUMN MDMP_VIEW_SCOPE.VIEW_SCOPE_ID IS
'视角范围ID';

COMMENT ON COLUMN MDMP_VIEW_SCOPE.VIEW_ID IS
'视角ID';

COMMENT ON COLUMN MDMP_VIEW_SCOPE.META_FULLNAME IS
'元数据全路径名';

COMMENT ON COLUMN MDMP_VIEW_SCOPE.META_CLASS IS
'元模型';

ALTER TABLE MDMP_USER_DEFAULT_VIEW
   ADD CONSTRAINT F_PF_VIE FOREIGN KEY (VIEW_ID)
      REFERENCES MDMP_UI_VIEW (VIEW_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_VIEW_AUTH
   ADD CONSTRAINT F_PF_VIE FOREIGN KEY (VIEW_ID)
      REFERENCES MDMP_UI_VIEW (VIEW_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_VIEW_SCOPE
   ADD CONSTRAINT F_PF_VIE FOREIGN KEY (VIEW_ID)
      REFERENCES MDMP_UI_VIEW (VIEW_ID)
      ON DELETE RESTRICT;
     
--==============================================================
-- MDMP_METADATA增加指纹字段
--==============================================================     
ALTER TABLE MDMP_METADATA
   ADD FINGERPRINT VARCHAR(32);

COMMENT ON COLUMN MDMP_METADATA.FINGERPRINT IS
'指纹';

--==============================================================
-- MDMP_HIS_METADATA增加指纹字段
--==============================================================     
ALTER TABLE MDMP_HIS_METADATA
   ADD FINGERPRINT VARCHAR(32);

COMMENT ON COLUMN MDMP_HIS_METADATA.FINGERPRINT IS
'指纹';


--==============================================================
-- MDMP_VIEW_SCOPE修改字段
--==============================================================
ALTER TABLE MDMP_VIEW_SCOPE
   ADD FINGERPRINT VARCHAR(32);

COMMENT ON COLUMN MDMP_VIEW_SCOPE.FINGERPRINT IS
'指纹';

--删除字段
ALTER TABLE MDMP_VIEW_SCOPE DROP COLUMN META_FULLNAME;


--==============================================================
-- Table: MDMP_ISSUE_METADATA
--==============================================================
CREATE TABLE MDMP_ISSUE_METADATA (
   METADATA_ISSUE_ID    VARCHAR(32)            NOT NULL,
   META_CLASS           VARCHAR(256),
   NAME                 VARCHAR(64),
   CNNAME               VARCHAR(64),
   ALIAS                VARCHAR(256),
   CODE                 VARCHAR(32),
   META_VERSION         INTEGER,
   STATUS               VARCHAR(32),
   PHASE                VARCHAR(32),
   CREATOR              VARCHAR(32),
   GMT_CREATE           TIMESTAMP,
   MODIFIER             VARCHAR(32),
   GMT_MODIFY           TIMESTAMP,
   ISSUER               VARCHAR(32),
   GMT_ISSUE            TIMESTAMP,
   DESTROYER            VARCHAR(32),
   GMT_DESTORY          TIMESTAMP,
   ENABLED              DEC(1),
   LOCKED               DEC(1),
   ISSUE_VERSION        VARCHAR(32),
   CHANGE_ID            VARCHAR(32),
   OPERATION_TYPE       VARCHAR(32),
   FINGERPRINT          VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (METADATA_ISSUE_ID)
);

COMMENT ON TABLE MDMP_ISSUE_METADATA IS
'发行元数据';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.METADATA_ISSUE_ID IS
'元数据发行ID';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.META_CLASS IS
'元模型';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.NAME IS
'英文名';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.CNNAME IS
'中文名';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.ALIAS IS
'别名';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.CODE IS
'编码';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.META_VERSION IS
'版本号';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.PHASE IS
'所在阶段';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.CREATOR IS
'创建人';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.MODIFIER IS
'修改人';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.GMT_MODIFY IS
'修改时间';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.ISSUER IS
'发行人';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.GMT_ISSUE IS
'发行时间';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.DESTROYER IS
'销毁人';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.GMT_DESTORY IS
'销毁时间';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.ENABLED IS
'是否启用';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.LOCKED IS
'是否锁定';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.ISSUE_VERSION IS
'发行版本号';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.CHANGE_ID IS
'变更ID';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.OPERATION_TYPE IS
'操作类型';

COMMENT ON COLUMN MDMP_ISSUE_METADATA.FINGERPRINT IS
'指纹';

--==============================================================
-- Table: MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE
--==============================================================
CREATE TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE (
   ATTRIBUTE_ITEM_VALUE_ISSUE_ID VARCHAR(32)            NOT NULL,
   ATTRIBUTE_VALUE_ISSUE_ID VARCHAR(32),
   ORD                  INTEGER,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_ITEM_VALUE_ISSUE_ID)
);

COMMENT ON TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE IS
'发行属性值项';

COMMENT ON COLUMN
MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_ITEM_VALUE_ISSUE_ID IS
'属性值项发行ID';

COMMENT ON COLUMN
MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE.ATTRIBUTE_VALUE_ISSUE_ID IS
'属性值发行ID';

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE.ORD IS
'排序';

-- MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE  增加字段
ALTER TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE
   ADD LITERAL_VALUE VARCHAR(256);

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE.LITERAL_VALUE IS
'字面值';

--==============================================================
-- Table: MDMP_ISSUE_META_RELATION
--==============================================================
CREATE TABLE MDMP_ISSUE_META_RELATION (
   META_RELATION_ISSUE_ID VARCHAR(32)            NOT NULL,
   SOURCE_METADATA_ISSUE_ID VARCHAR(32),
   TARGET_METADATA_ISSUE_ID VARCHAR(32),
   RELATION_TYPE        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (META_RELATION_ISSUE_ID)
);

COMMENT ON TABLE MDMP_ISSUE_META_RELATION IS
'发行元数据关联关系';

COMMENT ON COLUMN MDMP_ISSUE_META_RELATION.META_RELATION_ISSUE_ID IS
'元数据关联关系发行ID';

COMMENT ON COLUMN MDMP_ISSUE_META_RELATION.SOURCE_METADATA_ISSUE_ID IS
'源元数据发行ID';

COMMENT ON COLUMN MDMP_ISSUE_META_RELATION.TARGET_METADATA_ISSUE_ID IS
'目标元数据发行ID';

COMMENT ON COLUMN MDMP_ISSUE_META_RELATION.RELATION_TYPE IS
'关联类型';
--==============================================================
-- Table: MDMP_ISSUE_ATTRIBUTE_VALUE
--==============================================================
CREATE TABLE MDMP_ISSUE_ATTRIBUTE_VALUE (
   ATTRIBUTE_VALUE_ISSUE_ID VARCHAR(32)            NOT NULL,
   METADATA_ISSUE_ID    VARCHAR(32),
   LITERAL_VALUE        VARCHAR(256),
   VALUE_TYPE           VARCHAR(32),
   ATTRIBUTE_NAME       VARCHAR(64),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_VALUE_ISSUE_ID)
);

COMMENT ON TABLE MDMP_ISSUE_ATTRIBUTE_VALUE IS
'发行属性值';

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_VALUE.ATTRIBUTE_VALUE_ISSUE_ID IS

'属性值发行ID';

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_VALUE.METADATA_ISSUE_ID IS
'元数据发行ID';

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_VALUE.LITERAL_VALUE IS
'字面值';

COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_VALUE.VALUE_TYPE IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';


COMMENT ON COLUMN MDMP_ISSUE_ATTRIBUTE_VALUE.ATTRIBUTE_NAME IS
'属性名';



ALTER TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE
   ADD CONSTRAINT F_PF_ATT FOREIGN KEY (ATTRIBUTE_VALUE_ISSUE_ID)
      REFERENCES MDMP_ISSUE_ATTRIBUTE_VALUE (ATTRIBUTE_VALUE_ISSUE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_ISSUE_ATTRIBUTE_VALUE
   ADD CONSTRAINT F_PF_MET FOREIGN KEY (METADATA_ISSUE_ID)
      REFERENCES MDMP_ISSUE_METADATA (METADATA_ISSUE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_ISSUE_META_RELATION
   ADD CONSTRAINT F_PF_MET_SOURCE FOREIGN KEY (SOURCE_METADATA_ISSUE_ID)
      REFERENCES MDMP_ISSUE_METADATA (METADATA_ISSUE_ID)
      ON DELETE RESTRICT;

ALTER TABLE MDMP_ISSUE_META_RELATION
   ADD CONSTRAINT F_PF_MET_TARGET FOREIGN KEY (TARGET_METADATA_ISSUE_ID)
      REFERENCES MDMP_ISSUE_METADATA (METADATA_ISSUE_ID)
      ON DELETE RESTRICT;


--删除元数据表：  父ID，历史元数据ID  历史元数据表：父ID
ALTER TABLE MDMP_METADATA DROP COLUMN PARENT_ID;
ALTER TABLE MDMP_METADATA DROP COLUMN METADATA_HIS_ID;
ALTER TABLE MDMP_HIS_METADATA DROP COLUMN PARENT_ID;

--==============================================================
-- Table: MDMP_TASK
--==============================================================
CREATE TABLE MDMP_TASK (
   TASK_ID              VARCHAR(32)            NOT NULL,
   TASK_NAME            VARCHAR(64),
   BATCH_SIZE           INTEGER,
   TOTAL                INTEGER,
   CLIENT_PAGE          INTEGER,
   SERVER_PAGE          INTEGER,
   GMT_CREATE           TIMESTAMP,
   GMT_END              TIMESTAMP,
   STATUS               VARCHAR(32),
   ERROR_MESSAGE        CLOB,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (TASK_ID)
);

COMMENT ON TABLE MDMP_TASK IS
'任务';

COMMENT ON COLUMN MDMP_TASK.TASK_ID IS
'任务ID';

COMMENT ON COLUMN MDMP_TASK.TASK_NAME IS
'任务名称';

COMMENT ON COLUMN MDMP_TASK.BATCH_SIZE IS
'最大条数';

COMMENT ON COLUMN MDMP_TASK.TOTAL IS
'总页';

COMMENT ON COLUMN MDMP_TASK.CLIENT_PAGE IS
'客户端页';

COMMENT ON COLUMN MDMP_TASK.SERVER_PAGE IS
'服务端页';

COMMENT ON COLUMN MDMP_TASK.GMT_CREATE IS
'创建时间';

COMMENT ON COLUMN MDMP_TASK.GMT_END IS
'终止时间';

COMMENT ON COLUMN MDMP_TASK.STATUS IS
'状态';

COMMENT ON COLUMN MDMP_TASK.ERROR_MESSAGE IS
'错误信息';

--==============================================================
-- Table: MDMP_DIAGRAM
--==============================================================
CREATE TABLE "MDMP_DIAGRAM" (
   "DIAGRAM_ID"         VARCHAR(32)            NOT NULL,
   "JSON"               CLOB,
   "FINGERPRINT"        VARCHAR(32),
   "DIAGRAM_TYPE"       VARCHAR(32),
   "META_VERSION"       INTEGER,
   "NAME"               VARCHAR(64),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("DIAGRAM_ID")
);

COMMENT ON TABLE "MDMP_DIAGRAM" IS
'示意图';

COMMENT ON COLUMN "MDMP_DIAGRAM"."DIAGRAM_ID" IS
'图表ID';

COMMENT ON COLUMN "MDMP_DIAGRAM"."JSON" IS
'内容';

COMMENT ON COLUMN "MDMP_DIAGRAM"."FINGERPRINT" IS
'指纹';

COMMENT ON COLUMN "MDMP_DIAGRAM"."DIAGRAM_TYPE" IS
'类型';

COMMENT ON COLUMN "MDMP_DIAGRAM"."META_VERSION" IS
'版本号';

COMMENT ON COLUMN "MDMP_DIAGRAM"."NAME" IS
'英文名';

-- 修改元数据英文名，中文名，编码长度为256
ALTER TABLE MDMP_METADATA ALTER COLUMN NAME SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_METADATA ALTER COLUMN CODE SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_METADATA ALTER COLUMN CNNAME SET DATA TYPE VARCHAR(256);


-- 修改发行元数据英文名，中文名，编码长度为256
ALTER TABLE MDMP_ISSUE_METADATA ALTER COLUMN NAME SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_ISSUE_METADATA ALTER COLUMN CODE SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_ISSUE_METADATA ALTER COLUMN CNNAME SET DATA TYPE VARCHAR(256);

-- 修改历史元数据英文名，中文名，编码长度为256
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN NAME SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN CODE SET DATA TYPE VARCHAR(256);
ALTER TABLE MDMP_HIS_METADATA ALTER COLUMN CNNAME SET DATA TYPE VARCHAR(256);

CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ISSUE_METADATA');
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_METADATA');
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_HIS_METADATA');




--==============================================================
-- Table: "MDMP_IMPORT_EXPORT_LOG"
--==============================================================
CREATE TABLE "MDMP_IMPORT_EXPORT_LOG"
(
   "IMPORT_EXPORT_LOG_ID" VARCHAR(32)            NOT NULL,
   "FILE_PATH"          VARCHAR(256),
   "FILE_NAME"          VARCHAR(64),
   "OPERATOR"           VARCHAR(32),
   "GMT_OPERATE"        TIMESTAMP,
   "METADATA_PATH"      VARCHAR(4000),
   "OPERATE_STATUS"     VARCHAR(32),
   "OPERATE_POLICY"     VARCHAR(256),
   "ERROR_MESSAGE"      VARCHAR(4000),
   "OPERATE_TYPE"       VARCHAR(32),
   "GMT_FINISHED"       TIMESTAMP,
   "CN_NAME"            VARCHAR(256),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("IMPORT_EXPORT_LOG_ID")
);

COMMENT ON TABLE "MDMP_IMPORT_EXPORT_LOG" IS
'导入导出日志';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."IMPORT_EXPORT_LOG_ID" IS
'导入导出日志ID';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."FILE_PATH" IS
'文件路径';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."FILE_NAME" IS
'文件名';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."OPERATOR" IS
'操作人';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."GMT_OPERATE" IS
'操作时间';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."METADATA_PATH" IS
'元数据路径';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."OPERATE_STATUS" IS
'操作状态';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."OPERATE_POLICY" IS
'操作策略';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."ERROR_MESSAGE" IS
'错误信息';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."OPERATE_TYPE" IS
'操作类型';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."GMT_FINISHED" IS
'完成时间';

COMMENT ON COLUMN "MDMP_IMPORT_EXPORT_LOG"."CN_NAME" IS
'中文名';

--==============================================================
-- Table: "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"
--==============================================================
CREATE TABLE "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"
(
   "PRE_ATTRIBUTE_ITEM_VALUE_ID" VARCHAR(32)            NOT NULL,
   "PRE_ATTRIBUTE_VALUE_ID" VARCHAR(32),
   "LITERAL_VALUE"      VARCHAR(8000),
   "ORD"                INTEGER,
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("PRE_ATTRIBUTE_ITEM_VALUE_ID")
);

COMMENT ON TABLE "MDMP_PRE_ATTRIBUTE_ITEM_VALUE" IS
'预导入属性值项';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"."PRE_ATTRIBUTE_ITEM_VALUE_ID" IS
'预导入属性值项ID';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"."PRE_ATTRIBUTE_VALUE_ID" IS
'预导入属性值ID';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"."LITERAL_VALUE" IS
'字面值';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"."ORD" IS
'排序';

--==============================================================
-- Index: PF_ATTR_VALUE_FK
--==============================================================
CREATE INDEX PF_ATTR_VALUE_FK ON "MDMP_PRE_ATTRIBUTE_ITEM_VALUE" (
   "PRE_ATTRIBUTE_VALUE_ID" ASC
);

--==============================================================
-- Table: "MDMP_PRE_ATTRIBUTE_VALUE"
--==============================================================
CREATE TABLE "MDMP_PRE_ATTRIBUTE_VALUE"
(
   "PRE_ATTRIBUTE_VALUE_ID" VARCHAR(32)            NOT NULL,
   "PRE_METADATA_ID"    VARCHAR(32),
   "LITERAL_VALUE"      VARCHAR(8000),
   "VALUE_TYPE"         VARCHAR(32),
   "ATTRIBUTE_NAME"     VARCHAR(64),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("PRE_ATTRIBUTE_VALUE_ID")
);

COMMENT ON TABLE "MDMP_PRE_ATTRIBUTE_VALUE" IS
'预导入属性值';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_VALUE"."PRE_ATTRIBUTE_VALUE_ID" IS
'预导入属性值ID';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_VALUE"."PRE_METADATA_ID" IS
'预导入元数据ID';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_VALUE"."LITERAL_VALUE" IS
'字面值';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_VALUE"."VALUE_TYPE" IS
'基础数据类型：int,boolean,long,number,BigDecimal,date,string,float
对象类型：元模型';

COMMENT ON COLUMN "MDMP_PRE_ATTRIBUTE_VALUE"."ATTRIBUTE_NAME" IS
'属性名';

--==============================================================
-- Index: PF_META_ATTR_FK
--==============================================================
CREATE INDEX PF_META_ATTR_FK ON "MDMP_PRE_ATTRIBUTE_VALUE" (
   "PRE_METADATA_ID"    ASC
);

--==============================================================
-- Table: "MDMP_PRE_METADATA"
--==============================================================
CREATE TABLE "MDMP_PRE_METADATA"
(
   "PRE_METADATA_ID"    VARCHAR(32)            NOT NULL,
   "IMPORT_EXPORT_LOG_ID" VARCHAR(32),
   "META_CLASS"         VARCHAR(256),
   "NAME"               VARCHAR(64),
   "CNNAME"             VARCHAR(64),
   "ALIAS"              VARCHAR(256),
   "CODE"               VARCHAR(32),
   "OPERATION_TYPE"     VARCHAR(32),
   "IMPORT_SEQUENCE"    INTEGER,
   "STATUS"             VARCHAR(32),
   "PATH"               VARCHAR(1024),
   "ERROR_INFO"         VARCHAR(256),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("PRE_METADATA_ID")
);

COMMENT ON TABLE "MDMP_PRE_METADATA" IS
'预导入元数据';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."PRE_METADATA_ID" IS
'预导入元数据ID';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."IMPORT_EXPORT_LOG_ID" IS
'导入导出日志ID';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."META_CLASS" IS
'元模型';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."NAME" IS
'英文名';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."CNNAME" IS
'中文名';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."ALIAS" IS
'别名';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."CODE" IS
'编码';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."OPERATION_TYPE" IS
'操作类型';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."IMPORT_SEQUENCE" IS
'导入序号';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."STATUS" IS
'状态';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."PATH" IS
'路径';

COMMENT ON COLUMN "MDMP_PRE_METADATA"."ERROR_INFO" IS
'错误信息';

--==============================================================
-- Index: PF_LOG_META_FK
--==============================================================
CREATE INDEX PF_LOG_META_FK ON "MDMP_PRE_METADATA" (
   "IMPORT_EXPORT_LOG_ID" ASC
);

ALTER TABLE "MDMP_PRE_ATTRIBUTE_ITEM_VALUE"
   ADD CONSTRAINT F_PF_ATTR_VALUE FOREIGN KEY ("PRE_ATTRIBUTE_VALUE_ID")
      REFERENCES "MDMP_PRE_ATTRIBUTE_VALUE" ("PRE_ATTRIBUTE_VALUE_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE "MDMP_PRE_ATTRIBUTE_VALUE"
   ADD CONSTRAINT F_PF_META_ATTR FOREIGN KEY ("PRE_METADATA_ID")
      REFERENCES "MDMP_PRE_METADATA" ("PRE_METADATA_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE "MDMP_PRE_METADATA"
   ADD CONSTRAINT F_PF_LOG_META FOREIGN KEY ("IMPORT_EXPORT_LOG_ID")
      REFERENCES "MDMP_IMPORT_EXPORT_LOG" ("IMPORT_EXPORT_LOG_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;


--==============================================================
-- Table: "MDMP_ADAPTER"
--==============================================================
CREATE TABLE "MDMP_ADAPTER"
(
   "ADAPTER_ID" VARCHAR(32)            NOT NULL,
   "ADAPTER_NAME"       VARCHAR(256),
   "ADAPTER_CLASS"      VARCHAR(256),
   "ADAPTER_VERSION"    VARCHAR(32),
   "REMARK"             LONG VARCHAR,
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("ADAPTER_ID")
);

COMMENT ON TABLE "MDMP_ADAPTER" IS
'元数据适配器';

COMMENT ON COLUMN "MDMP_ADAPTER"."ADAPTER_ID" IS
'元数据适配器ID';

COMMENT ON COLUMN "MDMP_ADAPTER"."ADAPTER_NAME" IS
'适配器名称';

COMMENT ON COLUMN "MDMP_ADAPTER"."ADAPTER_CLASS" IS
'适配器类名';

COMMENT ON COLUMN "MDMP_ADAPTER"."ADAPTER_VERSION" IS
'版本号';

COMMENT ON COLUMN "MDMP_ADAPTER"."REMARK" IS
'备注';


--元数据 字面值 长度扩展8000
--元数据
ALTER TABLE MDMP_ATTRIBUTE_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ATTRIBUTE_VALUE');
ALTER TABLE MDMP_ATTRIBUTE_ITEM_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ATTRIBUTE_ITEM_VALUE');

--发布元数据
ALTER TABLE MDMP_ISSUE_ATTRIBUTE_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ISSUE_ATTRIBUTE_VALUE');
ALTER TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ISSUE_ATTRIBUTE_ITEM_VALUE');

--历史元数据
ALTER TABLE MDMP_HIS_ATTRIBUTE_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_HIS_ATTRIBUTE_VALUE');
ALTER TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE ALTER COLUMN LITERAL_VALUE SET DATA TYPE VARCHAR(8000);
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_HIS_ATTRIBUTE_ITEM_VALUE');

--元模型新增创建人、创建时间、修改人、修改时间
ALTER TABLE MDMP_CLASS ADD CREATOR VARCHAR(32);
ALTER TABLE MDMP_CLASS ADD GMT_CREATE TIMESTAMP;
ALTER TABLE MDMP_CLASS ADD MODIFIER VARCHAR(32);
ALTER TABLE MDMP_CLASS ADD GMT_MODIFY TIMESTAMP;
COMMENT ON COLUMN MDMP_CLASS.CREATOR IS
'创建人';
COMMENT ON COLUMN MDMP_CLASS.GMT_CREATE IS
'创建时间';
COMMENT ON COLUMN MDMP_CLASS.MODIFIER IS
'修改人';
COMMENT ON COLUMN MDMP_CLASS.GMT_MODIFY IS
'修改时间';
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_CLASS');
UPDATE MDMP_CLASS SET CREATOR = 'admin', GMT_CREATE = TIMESTAMP('2019-01-01 00:00:00'), MODIFIER='admin',
GMT_MODIFY = TIMESTAMP('2019-01-01 00:00:00') WHERE GMT_CREATE IS NULL OR GMT_MODIFY IS NULL;




--==============================================================
-- Table: "MDMP_BOARD_SCOPE"
--==============================================================
CREATE TABLE "MDMP_BOARD_SCOPE" (
   "BOARD_SCOPE_ID"     VARCHAR(32)            NOT NULL,
   "STATISTICS_BOARD_ID" VARCHAR(32),
   "CLASS_FULLNAME"     VARCHAR(256),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("BOARD_SCOPE_ID")
);

COMMENT ON TABLE "MDMP_BOARD_SCOPE" IS
'看板范围';

COMMENT ON COLUMN "MDMP_BOARD_SCOPE"."BOARD_SCOPE_ID" IS
'看板范围ID';

COMMENT ON COLUMN "MDMP_BOARD_SCOPE"."STATISTICS_BOARD_ID" IS
'统计看板ID';

COMMENT ON COLUMN "MDMP_BOARD_SCOPE"."CLASS_FULLNAME" IS
'元模型全路径名';

--==============================================================
-- Table: "MDMP_STATISTICS_BOARD"
--==============================================================
CREATE TABLE "MDMP_STATISTICS_BOARD" (
   "STATISTICS_BOARD_ID" VARCHAR(32)            NOT NULL,
   "BOARD_NAME"         VARCHAR(32),
   "OWNER"              VARCHAR(32),
   "IS_SYSTEM"          DEC(1),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("STATISTICS_BOARD_ID")
);

COMMENT ON TABLE "MDMP_STATISTICS_BOARD" IS
'看板';

COMMENT ON COLUMN "MDMP_STATISTICS_BOARD"."STATISTICS_BOARD_ID" IS
'统计看板ID';

COMMENT ON COLUMN "MDMP_STATISTICS_BOARD"."BOARD_NAME" IS
'版块名';

COMMENT ON COLUMN "MDMP_STATISTICS_BOARD"."OWNER" IS
'拥有者';

COMMENT ON COLUMN "MDMP_STATISTICS_BOARD"."IS_SYSTEM" IS
'是否系统';

ALTER TABLE "MDMP_BOARD_SCOPE"
   ADD CONSTRAINT F_PF_BOA FOREIGN KEY ("STATISTICS_BOARD_ID")
      REFERENCES "MDMP_STATISTICS_BOARD" ("STATISTICS_BOARD_ID")
      ON DELETE RESTRICT;


-- 增加属性文件表
--==============================================================
-- TABLE: "MDMP_ATTRIBUTE_FILE"
--==============================================================
CREATE TABLE "MDMP_ATTRIBUTE_FILE"
(
   "ATTRIBUTE_FILE_ID"  VARCHAR(32)            NOT NULL,
   "ATTRIBUTE_FILE_PATH" VARCHAR(4000),
   "ATTRIBUTE_FILE_NAME" VARCHAR(256),
   "SOURCE_NAME"        VARCHAR(256),
   "FINGERPRINT"        VARCHAR(32),
   "OPERATOR"           VARCHAR(32),
   "GMT_OPERATE"        TIMESTAMP,
   "FILE_TYPE"          VARCHAR(32),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("ATTRIBUTE_FILE_ID")
);

COMMENT ON TABLE "MDMP_ATTRIBUTE_FILE" IS
'属性文件';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."ATTRIBUTE_FILE_ID" IS
'属性文件ID';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."ATTRIBUTE_FILE_PATH" IS
'属性文件路径';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."ATTRIBUTE_FILE_NAME" IS
'属性文件名称';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."SOURCE_NAME" IS
'源名称';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."FINGERPRINT" IS
'指纹';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."OPERATOR" IS
'操作人';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."GMT_OPERATE" IS
'操作时间';

COMMENT ON COLUMN "MDMP_ATTRIBUTE_FILE"."FILE_TYPE" IS
'文件类型';


--增加元数据路径字段
ALTER TABLE MDMP_METADATA ADD METADATA_PATH VARCHAR(4000);
COMMENT ON COLUMN MDMP_METADATA.METADATA_PATH IS
'元数据路径';
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_METADATA');

--==============================================================
-- Table: "MDMP_ADAPTER_PARAM"
--==============================================================
CREATE TABLE "MDMP_ADAPTER_PARAM"
(
   "ADAPTER_PARAM_ID"   VARCHAR(32)            NOT NULL,
   "ADAPTER_ID"         VARCHAR(32),
   "CODE"               VARCHAR(32),
   "NAME"               VARCHAR(64),
   "DEFAULT_VALUE"      VARCHAR(4000),
   "IS_FILL"            NUMERIC(1),
   "DESC"               LONG VARCHAR,
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("ADAPTER_PARAM_ID")
);

COMMENT ON TABLE "MDMP_ADAPTER_PARAM" IS
'适配器参数';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."ADAPTER_PARAM_ID" IS
'适配器参数ID';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."ADAPTER_ID" IS
'元数据适配器ID';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."CODE" IS
'参数编码';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."NAME" IS
'参数名称';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."DEFAULT_VALUE" IS
'默认值';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."IS_FILL" IS
'是否必填';

COMMENT ON COLUMN "MDMP_ADAPTER_PARAM"."DESC" IS
'描述';

--==============================================================
-- Index: PF_AD_PA_FK
--==============================================================
CREATE INDEX PF_AD_PA_FK ON "MDMP_ADAPTER_PARAM" (
   "ADAPTER_ID"         ASC
);

--==============================================================
-- Table: "MDMP_DATA_SOURCE"
--==============================================================
CREATE TABLE "MDMP_DATA_SOURCE"
(
   "DATA_SOURCE_ID"     VARCHAR(32)            NOT NULL,
   "ADAPTER_ID"         VARCHAR(32),
   "NAME"               VARCHAR(64),
   "DESC"               LONG VARCHAR,
   "FINGERPRINT"        VARCHAR(32),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("DATA_SOURCE_ID")
);

COMMENT ON TABLE "MDMP_DATA_SOURCE" IS
'数据源';

COMMENT ON COLUMN "MDMP_DATA_SOURCE"."DATA_SOURCE_ID" IS
'数据源ID';

COMMENT ON COLUMN "MDMP_DATA_SOURCE"."ADAPTER_ID" IS
'元数据适配器ID';

COMMENT ON COLUMN "MDMP_DATA_SOURCE"."NAME" IS
'名称';

COMMENT ON COLUMN "MDMP_DATA_SOURCE"."DESC" IS
'描述';

COMMENT ON COLUMN "MDMP_DATA_SOURCE"."FINGERPRINT" IS
'指纹';

--==============================================================
-- Index: PF_DA_AD_FK
--==============================================================
CREATE INDEX PF_DA_AD_FK ON "MDMP_DATA_SOURCE" (
   "ADAPTER_ID"         ASC
);

--==============================================================
-- Table: "MDMP_DATA_SOURCE_PARAM"
--==============================================================
CREATE TABLE "MDMP_DATA_SOURCE_PARAM"
(
   "DATA_PARAM_ID"      VARCHAR(32)            NOT NULL,
   "DATA_SOURCE_ID"     VARCHAR(32),
   "CODE"               VARCHAR(32),
   "NAME"               VARCHAR(64),
   "VALUE"              VARCHAR(256),
   "IS_FILL"            NUMERIC(1),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("DATA_PARAM_ID")
);

COMMENT ON TABLE "MDMP_DATA_SOURCE_PARAM" IS
'数据源参数';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."DATA_PARAM_ID" IS
'数据源参数ID';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."DATA_SOURCE_ID" IS
'数据源Id';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."CODE" IS
'参数名';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."NAME" IS
'显示名';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."VALUE" IS
'参数值';

COMMENT ON COLUMN "MDMP_DATA_SOURCE_PARAM"."IS_FILL" IS
'是否必填';

--==============================================================
-- Index: PF_DA_PA_FK
--==============================================================
CREATE INDEX PF_DA_PA_FK ON "MDMP_DATA_SOURCE_PARAM" (
   "DATA_SOURCE_ID"     ASC
);

ALTER TABLE "MDMP_ADAPTER_PARAM"
   ADD CONSTRAINT F_PF_AD_PA FOREIGN KEY ("ADAPTER_ID")
      REFERENCES "MDMP_ADAPTER" ("ADAPTER_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE "MDMP_DATA_SOURCE"
   ADD CONSTRAINT F_PF_DA_AD FOREIGN KEY ("ADAPTER_ID")
      REFERENCES "MDMP_ADAPTER" ("ADAPTER_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE "MDMP_DATA_SOURCE_PARAM"
   ADD CONSTRAINT F_PF_DA_PA FOREIGN KEY ("DATA_SOURCE_ID")
      REFERENCES "MDMP_DATA_SOURCE" ("DATA_SOURCE_ID")
      ON DELETE RESTRICT ON UPDATE RESTRICT;

--==============================================================
-- Table: MDMP_TASK_CONFIG
--==============================================================
CREATE TABLE MDMP_TASK_CONFIG
(
   TASK_CONFIG_ID       VARCHAR(32)            NOT NULL,
   DATA_SOURCE_ID       VARCHAR(32),
   PLAN_ID              VARCHAR(32),
   STORAGE_PLOY         VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (TASK_CONFIG_ID)
);

COMMENT ON TABLE MDMP_TASK_CONFIG IS
'任务配置';

COMMENT ON COLUMN MDMP_TASK_CONFIG.TASK_CONFIG_ID IS
'任务配置ID';

COMMENT ON COLUMN MDMP_TASK_CONFIG.DATA_SOURCE_ID IS
'数据源ID';

COMMENT ON COLUMN MDMP_TASK_CONFIG.PLAN_ID IS
'任务关联ID';

COMMENT ON COLUMN MDMP_TASK_CONFIG.STORAGE_PLOY IS
'入库策略';

--==============================================================
-- Index: PF_DS_T_C_FK
--==============================================================
CREATE INDEX PF_DS_T_C_FK ON MDMP_TASK_CONFIG (
   DATA_SOURCE_ID       ASC
);
ALTER TABLE MDMP_TASK_CONFIG
   ADD CONSTRAINT F_PF_DS_T_C FOREIGN KEY (DATA_SOURCE_ID)
      REFERENCES MDMP_DATA_SOURCE (DATA_SOURCE_ID)
      ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE "MDMP_GROUP"
(
   GROUP_ID               VARCHAR(32)           NOT NULL,
   GROUP_NAME        VARCHAR(64),
   CONSTRAINT "P_IDENTIFIER_1" PRIMARY KEY ("GROUP_ID")
);

COMMENT ON TABLE "MDMP_GROUP" IS
'组';

COMMENT ON COLUMN "MDMP_GROUP"."GROUP_ID" IS
'组ID';

COMMENT ON COLUMN "MDMP_GROUP"."GROUP_NAME" IS
'组名';

--==============================================================
-- Table: "MDMP_HOMOIONYM"
--==============================================================
CREATE TABLE "MDMP_HOMOIONYM"
(
   WORD_ID            VARCHAR(32)           NOT NULL,
   GROUP_ID           VARCHAR(32),
   WORD               VARCHAR(256),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (WORD_ID)
);

COMMENT ON TABLE "MDMP_HOMOIONYM" IS
'词';

COMMENT ON COLUMN "MDMP_HOMOIONYM"."WORD_ID" IS
'词ID';
COMMENT ON COLUMN "MDMP_HOMOIONYM"."GROUP_ID" IS
'组ID';
COMMENT ON COLUMN "MDMP_HOMOIONYM"."WORD" IS
'词';

ALTER TABLE "MDMP_HOMOIONYM"
   ADD CONSTRAINT F_PF_GROUP_WORD FOREIGN KEY ("GROUP_ID")
      REFERENCES "MDMP_GROUP" ("GROUP_ID")
      ON DELETE RESTRICT;

--==============================================================
-- Table: DQC_HIS_SCORE_CARD
--==============================================================
CREATE TABLE DQC_HIS_SCORE_CARD
(
   HIS_SCORE_CARD_ID  VARCHAR(32)            NOT NULL,
   FINGERPRINT        VARCHAR(32),
   SCORE              INTEGER,
   GMT_EVALUATION     TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (HIS_SCORE_CARD_ID)
);

COMMENT ON TABLE DQC_HIS_SCORE_CARD IS
'历史评分卡';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD.HIS_SCORE_CARD_ID IS
'历史评分卡ID';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD.FINGERPRINT IS
'指纹';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD.SCORE IS
'分值';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD.GMT_EVALUATION IS
'评分时间';

--==============================================================
-- Table: DQC_HIS_SCORE_CARD_ITEM
--==============================================================
CREATE TABLE DQC_HIS_SCORE_CARD_ITEM
(
   HIS_SCORE_CARD_ITEM_ID VARCHAR(32)            NOT NULL,
   HIS_SCORE_CARD_ID  VARCHAR(32),
   FINGERPRINT        VARCHAR(32),
   SCORE              INTEGER,
   SCORE_RULE         VARCHAR(256),
   TOTAL              INTEGER,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (HIS_SCORE_CARD_ITEM_ID)
);

COMMENT ON TABLE DQC_HIS_SCORE_CARD_ITEM IS
'历史评分卡明细';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.HIS_SCORE_CARD_ITEM_ID IS
'历史评分卡明细ID';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.HIS_SCORE_CARD_ID IS
'历史评分卡ID';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.FINGERPRINT IS
'指纹';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.SCORE IS
'分值';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.SCORE_RULE IS
'评分细则';

COMMENT ON COLUMN DQC_HIS_SCORE_CARD_ITEM.TOTAL IS
'总页';

--==============================================================
-- Index: PF_HIS_SC_ITEM_FK
--==============================================================
CREATE INDEX PF_HIS_SC_ITEM_FK ON DQC_HIS_SCORE_CARD_ITEM (
HIS_SCORE_CARD_ID  ASC
);

--==============================================================
-- Table: DQC_ISSUE_COMMENT
--==============================================================
CREATE TABLE DQC_ISSUE_COMMENT
(
   ISSUE_COMMENT_ID   VARCHAR(32)            NOT NULL,
   QUANTITY_ISSUE_ID  VARCHAR(32),
   CONTENT            LONG VARCHAR,
   DISCUSSANT         VARCHAR(32),
   GMT_COMMENT        TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ISSUE_COMMENT_ID)
);

COMMENT ON TABLE DQC_ISSUE_COMMENT IS
'问题评论';

COMMENT ON COLUMN DQC_ISSUE_COMMENT.ISSUE_COMMENT_ID IS
'问题评论ID';

COMMENT ON COLUMN DQC_ISSUE_COMMENT.QUANTITY_ISSUE_ID IS
'质量问题ID';

COMMENT ON COLUMN DQC_ISSUE_COMMENT.CONTENT IS
'内容';

COMMENT ON COLUMN DQC_ISSUE_COMMENT.DISCUSSANT IS
'评论者';

COMMENT ON COLUMN DQC_ISSUE_COMMENT.GMT_COMMENT IS
'评论时间';

--==============================================================
-- Index: PF_ISSUE_C_FK
--==============================================================
CREATE INDEX PF_ISSUE_C_FK ON DQC_ISSUE_COMMENT (
QUANTITY_ISSUE_ID  ASC
);

--==============================================================
-- Table: DQC_PROJECT
--==============================================================
CREATE TABLE DQC_PROJECT
(
   PROJECT_ID         VARCHAR(32)            NOT NULL,
   HIS_SCORE_CARD_ID  VARCHAR(32),
   NAME               VARCHAR(64),
   MEMO               VARCHAR(4000),
   PERIODIC_SCHEDULING VARCHAR(256),
   OWNER              VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (PROJECT_ID)
);

COMMENT ON TABLE DQC_PROJECT IS
'项目';

COMMENT ON COLUMN DQC_PROJECT.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_PROJECT.HIS_SCORE_CARD_ID IS
'历史评分卡ID';

COMMENT ON COLUMN DQC_PROJECT.NAME IS
'英文名';

COMMENT ON COLUMN DQC_PROJECT.MEMO IS
'备注';

COMMENT ON COLUMN DQC_PROJECT.PERIODIC_SCHEDULING IS
'周期调度';

COMMENT ON COLUMN DQC_PROJECT.OWNER IS
'拥有者';

--==============================================================
-- Index: PF_PROJ_HIS_SC_FK
--==============================================================
CREATE INDEX PF_PROJ_HIS_SC_FK ON DQC_PROJECT (
HIS_SCORE_CARD_ID  ASC
);

--==============================================================
-- Table: DQC_PROJECT_MEMBER
--==============================================================
CREATE TABLE DQC_PROJECT_MEMBER
(
   PROJECT_MEMBERID   VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   CODE               VARCHAR(32),
   ENABLED            NUMERIC(1),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (PROJECT_MEMBERID)
);

COMMENT ON TABLE DQC_PROJECT_MEMBER IS
'项目成员';

COMMENT ON COLUMN DQC_PROJECT_MEMBER.PROJECT_MEMBERID IS
'项目成员ID';

COMMENT ON COLUMN DQC_PROJECT_MEMBER.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_PROJECT_MEMBER.CODE IS
'编码';

COMMENT ON COLUMN DQC_PROJECT_MEMBER.ENABLED IS
'是否启用';

--==============================================================
-- Index: PF_PROJ_M_FK
--==============================================================
CREATE INDEX PF_PROJ_M_FK ON DQC_PROJECT_MEMBER (
PROJECT_ID         ASC
);

--==============================================================
-- Table: DQC_PROJECT_SCOPE
--==============================================================
CREATE TABLE DQC_PROJECT_SCOPE
(
   PROJECT_SCOPE_ID   VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   FINGERPRINT        VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (PROJECT_SCOPE_ID)
);

COMMENT ON TABLE DQC_PROJECT_SCOPE IS
'项目范围';

COMMENT ON COLUMN DQC_PROJECT_SCOPE.PROJECT_SCOPE_ID IS
'项目范围ID';

COMMENT ON COLUMN DQC_PROJECT_SCOPE.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_PROJECT_SCOPE.FINGERPRINT IS
'指纹';

--==============================================================
-- Index: PF_PROJ_SCP_FK
--==============================================================
CREATE INDEX PF_PROJ_SCP_FK ON DQC_PROJECT_SCOPE (
PROJECT_ID         ASC
);

--==============================================================
-- Table: DQC_PROJECT_TASK
--==============================================================
CREATE TABLE DQC_PROJECT_TASK
(
   PROJECT_TASK_ID    VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   PLAN_ID            VARCHAR(32),
   TASK_NAME          VARCHAR(64),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (PROJECT_TASK_ID)
);

COMMENT ON TABLE DQC_PROJECT_TASK IS
'项目任务';

COMMENT ON COLUMN DQC_PROJECT_TASK.PROJECT_TASK_ID IS
'项目任务ID';

COMMENT ON COLUMN DQC_PROJECT_TASK.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_PROJECT_TASK.PLAN_ID IS
'任务关联ID';

COMMENT ON COLUMN DQC_PROJECT_TASK.TASK_NAME IS
'任务名称';

--==============================================================
-- Index: PF_PROJ_TSK_FK
--==============================================================
CREATE INDEX PF_PROJ_TSK_FK ON DQC_PROJECT_TASK (
PROJECT_ID         ASC
);

--==============================================================
-- Table: DQC_QUANTITY_ISSUE
--==============================================================
CREATE TABLE DQC_QUANTITY_ISSUE
(
   QUANTITY_ISSUE_ID  VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   ISSUE_TYPE         VARCHAR(32),
   FINGERPRINT        VARCHAR(32),
   SEVERITY           VARCHAR(32),
   STATUS             VARCHAR(32),
   RESOLVED           NUMERIC(1),
   VIOLATION_RULE     VARCHAR(32),
   AUTHOR             VARCHAR(32),
   OWNER              VARCHAR(32),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (QUANTITY_ISSUE_ID)
);

COMMENT ON TABLE DQC_QUANTITY_ISSUE IS
'质量问题';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.QUANTITY_ISSUE_ID IS
'质量问题ID';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.ISSUE_TYPE IS
'问题类型';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.FINGERPRINT IS
'指纹';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.SEVERITY IS
'严重程度';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.STATUS IS
'状态';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.RESOLVED IS
'是否解决';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.VIOLATION_RULE IS
'违反规则';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.AUTHOR IS
'作者';

COMMENT ON COLUMN DQC_QUANTITY_ISSUE.OWNER IS
'拥有者';

--==============================================================
-- Index: PF_P_Q_ISSUE_FK
--==============================================================
CREATE INDEX PF_P_Q_ISSUE_FK ON DQC_QUANTITY_ISSUE (
PROJECT_ID         ASC
);

--==============================================================
-- Table: DQC_RULE_PERFORM_RECORD
--==============================================================
CREATE TABLE DQC_RULE_PERFORM_RECORD
(
   RULE_PERFORM_RECORD_ID VARCHAR(32)            NOT NULL,
   TASK_INSTANCE_ID   VARCHAR(32),
   RULE               VARCHAR(256),
   RESULT             VARCHAR(4000),
   GMT_BEGIN          TIMESTAMP,
   GMT_END            TIMESTAMP,
   PERFORM_NODE       VARCHAR(64),
   PASSED             NUMERIC(1),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (RULE_PERFORM_RECORD_ID)
);

COMMENT ON TABLE DQC_RULE_PERFORM_RECORD IS
'规则执行记录';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.RULE_PERFORM_RECORD_ID IS
'规则执行记录ID';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.TASK_INSTANCE_ID IS
'任务实例ID';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.RULE IS
'规则';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.RESULT IS
'执行结果';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.GMT_BEGIN IS
'开始时间';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.GMT_END IS
'终止时间';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.PERFORM_NODE IS
'执行节点';

COMMENT ON COLUMN DQC_RULE_PERFORM_RECORD.PASSED IS
'是否通过';

--==============================================================
-- Index: PF_T_INS_R_FK
--==============================================================
CREATE INDEX PF_T_INS_R_FK ON DQC_RULE_PERFORM_RECORD (
TASK_INSTANCE_ID   ASC
);

--==============================================================
-- Table: DQC_SCORE_CARD
--==============================================================
CREATE TABLE DQC_SCORE_CARD
(
   SCORE_CARD_ID      VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   FINGERPRINT        VARCHAR(32),
   SCORE              INTEGER,
   GMT_EVALUATION     TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (SCORE_CARD_ID)
);

COMMENT ON TABLE DQC_SCORE_CARD IS
'评分卡';

COMMENT ON COLUMN DQC_SCORE_CARD.SCORE_CARD_ID IS
'评分卡ID';

COMMENT ON COLUMN DQC_SCORE_CARD.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_SCORE_CARD.FINGERPRINT IS
'指纹';

COMMENT ON COLUMN DQC_SCORE_CARD.SCORE IS
'分值';

COMMENT ON COLUMN DQC_SCORE_CARD.GMT_EVALUATION IS
'评分时间';

--==============================================================
-- Index: PF_PROJ_SC_FK
--==============================================================
CREATE INDEX PF_PROJ_SC_FK ON DQC_SCORE_CARD (
PROJECT_ID         ASC
);

--==============================================================
-- Table: DQC_SCORE_CARD_ITEM
--==============================================================
CREATE TABLE DQC_SCORE_CARD_ITEM
(
   SCORE_CARD_ITEM_ID VARCHAR(32)            NOT NULL,
   SCORE_CARD_ID      VARCHAR(32),
   FINGERPRINT        VARCHAR(32),
   SCORE              INTEGER,
   SCORE_RULE         VARCHAR(256),
   TOTAL              INTEGER,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (SCORE_CARD_ITEM_ID)
);

COMMENT ON TABLE DQC_SCORE_CARD_ITEM IS
'评分卡明细';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.SCORE_CARD_ITEM_ID IS
'评分卡明细ID';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.SCORE_CARD_ID IS
'评分卡ID';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.FINGERPRINT IS
'指纹';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.SCORE IS
'分值';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.SCORE_RULE IS
'评分细则';

COMMENT ON COLUMN DQC_SCORE_CARD_ITEM.TOTAL IS
'总页';

--==============================================================
-- Index: PF_SC_ITEM_FK
--==============================================================
CREATE INDEX PF_SC_ITEM_FK ON DQC_SCORE_CARD_ITEM (
SCORE_CARD_ID      ASC
);

--==============================================================
-- Table: DQC_SUBSCRIPTION
--==============================================================
CREATE TABLE DQC_SUBSCRIPTION
(
   SUBSCRIPTION_ID    VARCHAR(32)            NOT NULL,
   USER_CODE          VARCHAR(32),
   TOPIC              VARCHAR(64),
   GMT_SUBSCRIBE      TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (SUBSCRIPTION_ID)
);

COMMENT ON TABLE DQC_SUBSCRIPTION IS
'订阅';

COMMENT ON COLUMN DQC_SUBSCRIPTION.SUBSCRIPTION_ID IS
'订阅ID';

COMMENT ON COLUMN DQC_SUBSCRIPTION.USER_CODE IS
'用户编号';

COMMENT ON COLUMN DQC_SUBSCRIPTION.TOPIC IS
'主题';

COMMENT ON COLUMN DQC_SUBSCRIPTION.GMT_SUBSCRIBE IS
'订阅时间';

--==============================================================
-- Table: DQC_TASK_INSTANCE
--==============================================================
CREATE TABLE DQC_TASK_INSTANCE
(
   TASK_INSTANCE_ID   VARCHAR(32)            NOT NULL,
   PROJECT_ID         VARCHAR(32),
   BATCH_ID           INTEGER,
   GMT_BEGIN          TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (TASK_INSTANCE_ID)
);

COMMENT ON TABLE DQC_TASK_INSTANCE IS
'任务实例';

COMMENT ON COLUMN DQC_TASK_INSTANCE.TASK_INSTANCE_ID IS
'任务实例ID';

COMMENT ON COLUMN DQC_TASK_INSTANCE.PROJECT_ID IS
'项目ID';

COMMENT ON COLUMN DQC_TASK_INSTANCE.BATCH_ID IS
'任务批次';

COMMENT ON COLUMN DQC_TASK_INSTANCE.GMT_BEGIN IS
'开始时间';

--==============================================================
-- Index: PF_PROJ_T_INS_FK
--==============================================================
CREATE INDEX PF_PROJ_T_INS_FK ON DQC_TASK_INSTANCE (
PROJECT_ID         ASC
);

ALTER TABLE DQC_HIS_SCORE_CARD_ITEM
   ADD CONSTRAINT F_PF_HIS_SC_ITEM FOREIGN KEY (HIS_SCORE_CARD_ID)
      REFERENCES DQC_HIS_SCORE_CARD (HIS_SCORE_CARD_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_ISSUE_COMMENT
   ADD CONSTRAINT F_PF_ISSUE_C FOREIGN KEY (QUANTITY_ISSUE_ID)
      REFERENCES DQC_QUANTITY_ISSUE (QUANTITY_ISSUE_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_PROJECT
   ADD CONSTRAINT F_PF_PROJ_HIS_SC FOREIGN KEY (HIS_SCORE_CARD_ID)
      REFERENCES DQC_HIS_SCORE_CARD (HIS_SCORE_CARD_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_PROJECT_MEMBER
   ADD CONSTRAINT F_PF_PROJ_M FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_PROJECT_SCOPE
   ADD CONSTRAINT F_PF_PROJ_SCP FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_PROJECT_TASK
   ADD CONSTRAINT F_PF_PROJ_TSK FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_QUANTITY_ISSUE
   ADD CONSTRAINT F_PF_P_Q_ISSUE FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_RULE_PERFORM_RECORD
   ADD CONSTRAINT F_PF_T_INS_R FOREIGN KEY (TASK_INSTANCE_ID)
      REFERENCES DQC_TASK_INSTANCE (TASK_INSTANCE_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_SCORE_CARD
   ADD CONSTRAINT F_PF_PROJ_SC FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_SCORE_CARD_ITEM
   ADD CONSTRAINT F_PF_SC_ITEM FOREIGN KEY (SCORE_CARD_ID)
      REFERENCES DQC_SCORE_CARD (SCORE_CARD_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE DQC_TASK_INSTANCE
   ADD CONSTRAINT F_PF_PROJ_T_INS FOREIGN KEY (PROJECT_ID)
      REFERENCES DQC_PROJECT (PROJECT_ID)
   ON DELETE RESTRICT ON UPDATE RESTRICT;

--增加元模型属性 格式/同值权重/非同值权重
ALTER TABLE MDMP_CLS_ATTRIBUTE ADD FORMAT varchar(64);
ALTER TABLE MDMP_CLS_ATTRIBUTE ADD EQU_WEIGHT INTEGER;
ALTER TABLE MDMP_CLS_ATTRIBUTE ADD UNEQU_WEIGHT INTEGER;
COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.FORMAT IS
'任务实例ID';
COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.EQU_WEIGHT IS
'同值权重';
COMMENT ON COLUMN MDMP_CLS_ATTRIBUTE.UNEQU_WEIGHT IS
'非同值权重';

CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_CLS_ATTRIBUTE');




--==============================================================
-- Table: MDMP_METADATA_MAPPING
--==============================================================
CREATE TABLE MDMP_METADATA_MAPPING
(
   MAPPING_ID           VARCHAR(32)            NOT NULL,
   MAPPING_NAME         VARCHAR(256),
   META_CLS_ALIAS       VARCHAR(256),
   META_CLS_FULLNAME    VARCHAR(256),
   ADAPTER_DESC         VARCHAR(256),
   ADAPTER_NAME         VARCHAR(256),
   SOURCE_NAME 			VARCHAR(256),
   SOURCE_DESC          VARCHAR(256),
   GTM_CREATE           TIMESTAMP,
   GTM_MODIFY           TIMESTAMP,
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (MAPPING_ID)
);

COMMENT ON COLUMN MDMP_METADATA_MAPPING.MAPPING_ID IS
'映射ID';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.MAPPING_NAME IS
'映射名称';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.META_CLS_ALIAS IS
'元模型中文名';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.META_CLS_FULLNAME IS
'元模型全路径名';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.SOURCE_NAME IS
'源名称';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.SOURCE_DESC IS
'源描述';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.ADAPTER_DESC IS
'所属采集器描述';
COMMENT ON COLUMN MDMP_METADATA_MAPPING.ADAPTER_NAME IS
'适配器名称';



--==============================================================
-- Table: MDMP_ATTRIBUTE_MAPPING
--==============================================================
CREATE TABLE MDMP_ATTRIBUTE_MAPPING
(
   ATTRIBUTE_MAPPING_ID VARCHAR(32)            NOT NULL,
   MAPPING_ID           VARCHAR(32),
   SOURCE_ATTRIBUTE_NAME VARCHAR(256),
   TARGET_ATTRIBUTE_NAME VARCHAR(256),
   SOURCE_ATTRIBUTE_DESC VARCHAR(256),
   TARGET_ATTRIBUTE_DESC VARCHAR(256),
   CONSTRAINT P_IDENTIFIER_1 PRIMARY KEY (ATTRIBUTE_MAPPING_ID)
);

COMMENT ON COLUMN MDMP_ATTRIBUTE_MAPPING.ATTRIBUTE_MAPPING_ID IS
'属性映射id';
COMMENT ON COLUMN MDMP_ATTRIBUTE_MAPPING.MAPPING_ID IS
'映射ID';
COMMENT ON COLUMN MDMP_ATTRIBUTE_MAPPING.SOURCE_ATTRIBUTE_NAME IS
'源属性名称';
COMMENT ON COLUMN MDMP_ATTRIBUTE_MAPPING.TARGET_ATTRIBUTE_NAME IS
'目标属性名称';

--==============================================================
-- Index: PF_ATTR_MAPPING_FK
--==============================================================
CREATE INDEX PF_ATTR_MAPPING_FK ON MDMP_ATTRIBUTE_MAPPING (
   MAPPING_ID           ASC
);

ALTER TABLE MDMP_ATTRIBUTE_MAPPING
   ADD CONSTRAINT F_PF_ATTR_MAPPING FOREIGN KEY (MAPPING_ID)
      REFERENCES MDMP_METADATA_MAPPING (MAPPING_ID)
      ON DELETE RESTRICT ON UPDATE RESTRICT;

-- 适配器增加是否启用
ALTER TABLE MDMP_ADAPTER ADD ENABLE DECIMAL(1) ;
COMMENT ON COLUMN MDMP_ADAPTER.ENABLE IS '是否启用' ;
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ADAPTER') ;

-- 适配器参数增加排序
ALTER TABLE MDMP_ADAPTER_PARAM ADD SORT INTEGER;
COMMENT ON COLUMN MDMP_ADAPTER_PARAM.SORT IS
'排序';
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_ADAPTER_PARAM') ;

--数据源参数增加排序
ALTER TABLE MDMP_DATA_SOURCE_PARAM ADD SORT INTEGER;
COMMENT ON COLUMN MDMP_DATA_SOURCE_PARAM.SORT IS
'排序';
CALL SYSPROC.ADMIN_CMD('REORG TABLE MDMP_DATA_SOURCE_PARAM') ;
